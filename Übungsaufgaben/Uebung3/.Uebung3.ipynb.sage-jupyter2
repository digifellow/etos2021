{"backend_state":"init","connection_file":"/tmp/xdg-runtime-user/jupyter/kernel-6ca03ea8-1f43-4c13-ba5d-10af8f252bf5.json","kernel":"python3","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.9"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":1,"id":"56b7a6","input":"##development\n%load_ext extension_notebook_splitter","pos":0,"type":"cell"}
{"cell_type":"code","exec_count":10,"id":"942ce8","input":"%%task\n# Erstellen Sie eine Liste von v-Werte\nv0 = 0\nv1 = (s[1]-s[0])/(t[1]-t[0])\n\n# weiter mit v2...\n\nv = [v0, v1, #..., vn]\n\n# Erstellen Sie eine Liste von t-Werte\nt0 = 0\nt1 = (t[1]+t[0])/2\n\n# weiter mit t2...\n\nt_mittel = [t0, t1,#...,tn]","metadata":{"exercise":"task"},"pos":21,"type":"cell"}
{"cell_type":"code","exec_count":11,"id":"22d9c3","input":"%%solution\ndef v_theo(t): # theoretische Erwartung v(t)\n    return 9.81*t\n\nplt.plot(t_mittel, v, \"o\", label='Messung')\nplt.xlabel('Zeit / s')\nplt.ylabel('Geschwindigkeit / m$s^{-1}$')\nplt.plot(tt,v_theo(tt), \"-\", label='Theorie')\nplt.legend(loc=\"upper left\")\nplt.grid(True)\nplt.title('$v(t)$')\nplt.show()","metadata":{"exercise":"solution"},"output":{"0":{"data":{"image/png":"31cbe899158c3adae96aadd2b95025e23ae23815","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":11,"metadata":{"image/png":{"height":278,"width":379},"needs_background":"light"},"output_type":"execute_result"}},"pos":22,"type":"cell"}
{"cell_type":"code","exec_count":12,"id":"3a4d60","input":"%%task\ndef v_theo(t): # theoretische Erwartung v(t)\n    return\n\nplt.plot( ) # Plot für die Messung\nplt.plot( ) # Plot für die theoretische Erwartung","metadata":{"exercise":"task"},"pos":23,"type":"cell"}
{"cell_type":"code","exec_count":13,"id":"430e4b","input":"%%solution\nplt.plot(t**2, s, \"o\", label='Messung')\nplt.plot(t**2, s_theo(t), \"-\", label=\"Theorie\")\nplt.xlabel('Zeit im Quadrat / s²')\nplt.ylabel('Ort / m')\nplt.grid(True)\nplt.legend()\nplt.show()","metadata":{"exercise":"solution"},"output":{"0":{"data":{"image/png":"0822205323ad63c841ddd967656c3931d811a4cf","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":13,"metadata":{"image/png":{"height":261,"width":385},"needs_background":"light"},"output_type":"execute_result"}},"pos":25,"type":"cell"}
{"cell_type":"code","exec_count":14,"id":"9b1e2f","input":"%%task\nplt.plot( ) # Plot für die Messung\nplt.plot( ) # Plot für die theoretische Erwartung","metadata":{"exercise":"task"},"pos":26,"type":"cell"}
{"cell_type":"code","exec_count":15,"id":"4bea6e","input":"%%solution\nimport math\nh = 3.7\ng = 9.81\n\nt = math.sqrt(2*h/g)\nv = 0.5*g*t\n\nprint(\"Der Ball benötigt %3.2f\"%t, \"s\")\nprint(\"Die Aufprallgeschwindigkeit beträgt %3.2f\"%v, \"m/s\")","metadata":{"exercise":"solution"},"output":{"0":{"name":"stdout","output_type":"stream","text":"Der Ball benötigt 0.87 s\nDie Aufprallgeschwindigkeit beträgt 4.26 m/s\n"}},"pos":29,"type":"cell"}
{"cell_type":"code","exec_count":16,"id":"f2467f","input":"%%task\nimport math\nh =   # Höhe\ng =   # Erdbeschleinigung\n\nt =   # Formel für die Zeit\nv =   # Formel für die Geschwindigkeit\n\nprint() ","metadata":{"exercise":"task"},"pos":30,"type":"cell"}
{"cell_type":"code","exec_count":17,"id":"562a64","input":"%%task\nimport sbahn\nsbahn.display_plot()","pos":33,"type":"cell"}
{"cell_type":"code","exec_count":18,"id":"5655af","input":"%%solution\n\na_1 = 0.8        # Beschleinigung beim Anfahren\na_3 = -1.2       # Beschleinigung beim Anhalten\ns = 1000         # Abstand\nv_max = 15       # max. Geschwindigkeit\n\nt_1 = v_max / a_1              # Zeitpunkt 1\nt_3 = v_max / (-a_3)           # Zeitpunkt 3\n\nx_1 = 0.5 * a_1 * t_1 ** 2     # Strecke 1\nx_3 = 0.5 * (-a_3) * t_3 ** 2  # Strecke 3\n\nx_2 = s - x_1 - x_3            # Strecke 2\nt_2 = x_2 / v_max              # Zeitpunkt 2\n\nif t_2 < 0:\n    print(\"t_2 ist negativ, v_max wird nicht erreicht, der Ansatz stimmt also nicht!\")\nelse:\n    print(\"t_2 ist nicht negativ, v_max wird erreicht, der Ansatz funktioniert.\")\n\nt_gesamt = t_1 + t_2 + t_3     # Zeit gesamt\n\nprint(\"Die Gesamtzeit ist %f s.\" % t_gesamt)","metadata":{"exercise":"solution"},"output":{"0":{"name":"stdout","output_type":"stream","text":"t_2 ist nicht negativ, v_max wird erreicht, der Ansatz funktioniert.\nDie Gesamtzeit ist 82.291667 s.\n"}},"pos":36,"type":"cell"}
{"cell_type":"code","exec_count":19,"id":"c669e3","input":"%%task\na_1 =        # Beschleinigung beim Anfahren\na_3 =        # Beschleinigung beim Anhalten\ns =          # Abstand\nv_max =      # max. Geschwindigkeit\n\n# Berechnungen:\n","metadata":{"exercise":"task"},"pos":37,"type":"cell"}
{"cell_type":"code","exec_count":2,"id":"c736fd","input":"import os\nif \"COCALC_EXTRA_ENV\" in os.environ:\n    %matplotlib inline\nelse:\n    %matplotlib widget\n#%matplotlib nbagg","metadata":{"jupyter":{"source_hidden":true}},"pos":1,"type":"cell"}
{"cell_type":"code","exec_count":20,"id":"fe4bbe","input":"%%task\n# If-Anweisung zur Selbstkontrolle\nif t_2 < 0:\n    print(\"t_2 ist negativ, v_max wird nicht erreicht, der Ansatz stimmt also nicht!\")\nelse:\n    print(\"t_2 ist nicht negativ, v_max wird erreicht, der Ansatz funktioniert.\")","metadata":{"exercise":"task"},"pos":38,"type":"cell"}
{"cell_type":"code","exec_count":21,"id":"70805d","input":"%%task\n# Ergebnis: Fahrtdauer\n\nprint( )","metadata":{"exercise":"task"},"pos":39,"type":"cell"}
{"cell_type":"code","exec_count":22,"id":"f9307e","input":"%%solution\nimport math\na_1 = 0.8\na_3 = -1.2\ns = 1000\n\nt_2 = 0\n\nt_1 = math.sqrt(2 * s * (-a_3) / (a_1 * (-a_3) + a_1 ** 2))\nt_3 = a_1 / (-a_3) * t_1\n\n\nt_gesamt = t_1 + t_2 + t_3\n\nprint(\"Die Gesamtzeit ist %.2gs.\" % t_gesamt)","metadata":{"exercise":"solution"},"output":{"0":{"name":"stdout","output_type":"stream","text":"Die Gesamtzeit ist 65s.\n"}},"pos":42,"type":"cell"}
{"cell_type":"code","exec_count":23,"id":"2d5d36","input":"%%task\n\nimport math\na_1 =        # Beschleinigung beim Anfahren\na_3 =        # Beschleinigung beim Anhalten\ns =          # Abstand\n\nprint()","metadata":{"exercise":"task"},"pos":43,"type":"cell"}
{"cell_type":"code","exec_count":24,"id":"9ff226","input":"%%task\nfrom ipywidgets import interact, widgets\nfrom vplots import vector_v1, R1, F1\ninteract(vector_v1, R1 = R1, F1 = F1)","pos":49,"type":"cell"}
{"cell_type":"code","exec_count":25,"id":"56287e","input":"%%solution\nsR = 300   # Anlegestelle\nvF = 10    # Geschwindigkeit der Fähre\nvR = 7     # Strömungsgeschwindigkeit\n\nt = sR/vF  # Formel für die Zeit\n\nsD = vR*t\n\nprint(\"Die Fähre braucht für 300 m %2.0f\"%t, \"s.\")\nprint(\"Dabei driftet die Fähre ab %3.0f\"%sD, \"m.\")","metadata":{"exercise":"solution"},"output":{"0":{"name":"stdout","output_type":"stream","text":"Die Fähre braucht für 300 m 30 s.\nDabei driftet die Fähre ab 210 m.\n"}},"pos":53,"type":"cell"}
{"cell_type":"code","exec_count":26,"id":"b5c500","input":"%%task\nsR =     # Anlegestelle\nvF =     # Geschwindigkeit der Fähre\nvR =     # Strömungsgeschwindigkeit\n\n# Berechung:\n\nprint( )","metadata":{"exercise":"task"},"pos":54,"type":"cell"}
{"cell_type":"code","exec_count":27,"id":"10ba95","input":"from ipywidgets import interact, widgets\nfrom vplots import vector_v2, R2, F2, alpha\ninteract(vector_v2, R2 = R2, F2 = F2, alpha=alpha)","output":{"0":{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1c3a23d93eae462a9865902a54345cfa","version_major":2,"version_minor":0},"text/plain":"interactive(children=(FloatSlider(value=5.0, continuous_update=False, description='$\\\\vec v_{R} \\\\, [m/s]$', m…"},"exec_count":27,"output_type":"execute_result"},"1":{"data":{"text/plain":"<function vplots.vector_v2(R2, F2, alpha)>"},"exec_count":27,"output_type":"execute_result"}},"pos":57,"type":"cell"}
{"cell_type":"code","exec_count":28,"id":"5d893c","input":"%%solution\nalpha = math.degrees(math.asin(vR/vF))\nprint(\"Für die geradlinige Überfahrt ergibt sich als Winkel zur Senkrechten %3.1f\"%alpha,\"°.\")","metadata":{"exercise":"solution"},"output":{"0":{"name":"stdout","output_type":"stream","text":"Für die geradlinige Überfahrt ergibt sich als Winkel zur Senkrechten 44.4 °.\n"}},"pos":61,"type":"cell"}
{"cell_type":"code","exec_count":29,"id":"ac5035","input":"%%task\nalpha = # Winkel\nprint( )","metadata":{"exercise":"task"},"pos":62,"type":"cell"}
{"cell_type":"code","exec_count":3,"id":"9705c3","input":"%matplotlib inline\nimport matplotlib.pyplot as plt\nimport numpy as np\ng = 9.81 # m/s^2\nt = np.linspace(0,10)\ny = 0.5*g*t**2\n\n\nplt.plot(t,y, label='Weg')\nplt.xlabel('Zeit /s')\nplt.ylabel('Weg /m')\nplt.legend(loc=\"upper left\")\nplt.title('Gleichförmig beschleunigte Bewegung')\nplt.axis([0, 10, 0, 500])\nplt.grid(True)\nplt.show()\n","output":{"0":{"data":{"image/png":"e2756ad79b2fa6aa867742862edf8a744c8b3ad2","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":3,"metadata":{"image/png":{"height":277,"width":395},"needs_background":"light"},"output_type":"execute_result"}},"pos":6,"type":"cell"}
{"cell_type":"code","exec_count":4,"id":"1aa3ad","input":"%%task\n%matplotlib widget\n%run freier_fall.py","pos":11,"type":"cell"}
{"cell_type":"code","exec_count":5,"id":"9af6b9","input":"%%task\nimport numpy as np\n\nt = np.array([ ])    # in s\ns = np.array([ ])  # in m\n","pos":13,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"10690d","input":"%%solution\nimport numpy as np\n\nt = np.array([0, 0.067, 0.3, 0.6, 0.834])    # in s\ns = np.array([0, 0.035, 0.477, 1.93, 3.70])  # in m","metadata":{"exercise":"solution"},"pos":14,"type":"cell"}
{"cell_type":"code","exec_count":7,"id":"374b09","input":"%%solution\n%matplotlib inline\nimport matplotlib.pyplot as plt\n\ndef s_theo(t): # theoretische Erwartung s(t)\n    return 0.5*9.81*t**2\n\nplt.plot(t,s, \"o\", label='Messung')\ntt = np.linspace(0,0.9,100)\nplt.plot(tt, s_theo(tt), label='Theorie')\nplt.legend(loc=\"upper left\")\nplt.xlabel('Zeit / s')\nplt.ylabel('Ort / m')\nplt.grid(True)\nplt.title('$s(t)$')\nplt.show()","metadata":{"exercise":"solution"},"output":{"0":{"data":{"image/png":"92d4fa5fda507614d3db25928bc32b62bf394dcd","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":7,"metadata":{"image/png":{"height":278,"width":385},"needs_background":"light"},"output_type":"execute_result"}},"pos":16,"type":"cell"}
{"cell_type":"code","exec_count":8,"id":"3ce6db","input":"%%task\n%matplotlib inline\nimport matplotlib.pyplot as plt\n\ndef s_theo(t): # theoretische Erwartung s(t)\n    return \n\nplt.plot( )                 # Plot für die Messung\ntt = np.linspace(0,0.9,100)\nplt.plot(tt, )              # Plot für die theoretische Erwartung\nplt.xlabel( )\nplt.ylabel( )\nplt.grid(True)\nplt.title( )\nplt.show()","metadata":{"exercise":"task"},"pos":17,"type":"cell"}
{"cell_type":"code","exec_count":9,"id":"fe1bcf","input":"%%solution\n# Erstellen Sie eine Liste von v-Werte\nv0 = 0\nv1 = (s[1]-s[0])/(t[1]-t[0])\nv2 = (s[2]-s[1])/(t[2]-t[1])\nv3 = (s[3]-s[2])/(t[3]-t[2])\nv4 = (s[4]-s[3])/(t[4]-t[3])\nv = [v0, v1, v2, v3, v4]\nt1 = (t[1]+t[0])/2\nt2 = (t[2]+t[1])/2\nt3 = (t[3]+t[2])/2\nt4 = (t[4]+t[3])/2\nt_mittel = [0, t1, t2, t3, t4]","metadata":{"exercise":"solution"},"pos":20,"type":"cell"}
{"cell_type":"markdown","id":"0ef923","input":"**a)** Leiten Sie auf dem Papier eine Formel für $s_D$ her.","pos":50,"type":"cell"}
{"cell_type":"markdown","id":"192340","input":"<div style= \"color: black;background-color: rgba(0,177,172, 0.1) ;margin: 10 px auto; padding: 10px; border-radius: 10px\">\n<p style=\"font-size:12pt; text-align:center; color:   black;background-color: rgba(0,177,172, 0.1) ;margin: 10 px auto; padding: 10px; border-radius: 10px\" id=\"3\"><b>  Aufgabe 3 </b>  </p> \nWenn in Köln alle Brücken gesperrt sind, muss man mit der Fähre den Rhein (Strömungsgeschwindigkeit  $v_R = 7~\\mathrm{m/s}$) überqueren. Die Geschwindigkeit der Fähre bezüglich des Wassers sei $v_F = 10~\\mathrm{m/s}$. Welche Strecke $s_D$ weit flussabwärts muss die Anlegestelle in $x$-Richtung liegen, wenn die Fähre senkrecht zur Fließrichtung des Wassers fährt und der Rhein an dieser Stelle $300~\\mathrm{m}$ breit ist?","metadata":{"exercise":"task"},"pos":47,"type":"cell"}
{"cell_type":"markdown","id":"1a2646","input":"**b)** Berechnen Sie das numerische Ergebnis in der folgenden Code-Zelle.","pos":52,"type":"cell"}
{"cell_type":"markdown","id":"1cd9fc","input":"<div style=\" border: 2px solid lightblue ;margin: 10px auto; padding: 10px; border-radius: 10px;\">\n    <h5>\n        Plots mit Python \n    </h5>\n\nAls Beispiel werden wir den Weg über die Zeit bei einer gleichförmig beschleuingten Bewegung mit Startpunkt $s_0=0~\\mathrm{m}$ und Anfangsgeschwindigkeit $v_0= 0~\\mathrm{ms^{-1}}$ plotten:\n\n1. Zuerst importieren Sie die matplotlib-Bibliothek:\n\n```python\n# Diese Zeile ist notwendig um die Funktionen zum Plotten nutzen zu können\nimport matplotlib.pyplot as plt\n```\n\n\n    \n2. Wir erstellen Arrays für die Abszissenachse und eine für die Ordinatenachse. Man muss beachten, dass die Arrays die gleiche Dimension haben müssen. Wir betrachten die Zeit der ersten 10 s.\n\n```python\n# Manuell:\nt = np.linspace(0,10)    #s\ny = 0.5*g*t**2           # m\n\n```\n\n\n3. Plotten t gegen y:\n\n```python\n# Plot:\nplt.plot(t,y)                  # Einfach\nplt.plot(t,y, label='Weg')     # Plot mit Label\n```\n\n4. Formatierung: \n\n```python\nplt.xlabel('Zeit')                                 # Beschriftung für die x-Achse\nplt.ylabel('Weg')                                  # Beschriftung für die y-Achse\nplt.legend(loc=\"upper left\")                       # Position des Labels\nplt.title('gleichförmig beschleunigte Bewegung')   # Titel des Plots\n\n# Axis-Bereich plt.axis([xmin, xmax, ymin, ymax])\nplt.axis([0, 10, 0, 100])\n```\n\n5. Diagramm anzeigen: \n\n```python\nplt.grid(True)               # Grid falls erwüscht\nplt.show()\n```\n</div>","pos":5,"type":"cell"}
{"cell_type":"markdown","id":"20280d","input":"<div class=\"alert alert-block alert-info\">\n<i class=\"fas fa-lightbulb\"></i> <b>Code Tipps:</b>\n<ul>   \n<b>Listen & Arrays</b> II:\n   <p>Der Zugriff auf ein Element einer Liste oder eines Arrays mit $n$ Elementen erfolgt über den Index durch <code>liste[index]</code> mit den ganzzahligen Werten von index zwischen 0 und $n−1$. z.B.:</p>\n   <p><code>liste = np.array([12,3,6,7])</code></p>\n<li><code>liste[0] = 12</code></li>    \n<li><code>liste[1] = 3</code></li>  \n<li><code>liste[2] = 6</code></li>  \n<li><code>liste[3] = 7</code></li>      \n</div>","pos":18,"type":"cell"}
{"cell_type":"markdown","id":"20785a","input":"<div style=\" border: 2px solid black;margin: 10px auto; padding: 10px; border-radius: 10px;\">\n    <h5>\n        Überlagerung eindimensionaler Bewegungen\n    </h5>\n\nDas **Superpositionsprinzip** spielt in vielen Anwendungen der Physik eine große Rolle und führt zu **vereinfachten Beschreibung** von Bewegungen in verschiedene Richtungen. Ein Beispiel für den Fall überlagerter Geschwindigkeiten, ein Ruderer überquert einen Fluss. \n\n<img src=\"static/sumv.jpg\" align=\"center\"/>\n\n$$\\vec{v}_{ges} = \\vec{v}_{Ru} + \\vec{v}_{Fl}$$\n</div>","pos":45,"type":"cell"}
{"cell_type":"markdown","id":"20a121","input":"-----\n## Aufgabe 3","pos":44,"type":"cell"}
{"cell_type":"markdown","id":"2a1539","input":"%%solution    \n**Lösung**:    \n\nParameter aus der Aufgabenstellung: $a_1 = 0,\\!8 \\text{ m/s²}$ und $a_3 = -1,\\!2 \\text{ m/s²}$ und $s=1000 \\text{ m}$ und $v_\\max=15 \\text{ m/s}$.\n\nÜberlegung:  Die kürzeste Fahrtdauer wird erreicht wenn die konstante Geschwindigkeit auf freier Fahrt möglichst groß (die Höchstgeschwindigkeit der S-Bahn) ist.\n\nDas Anfahren dauert entsprechend $t_1 = v_\\max / a_1$. Das Abbremsen $t_3 = v_\\max / |a_3|$.\n\nDie Strecke die in der ersten und dritten Phase zurückgelegt wird lässt sich mit $\\frac{1}{2} a t^2$ berechnen, da die Geschwindigkeit entweder bei $0$ anfängt oder bei $0$ endet. \n$$x_1 = \\frac{1}{2} a_1 t_1^2 = \\frac{1}{2 a_1} v_\\max^2 , $$\n$$x_3 = \\frac{1}{2} |a_3| t_3^2 = \\frac{1}{2 |a_3|} v_\\max^2 . $$\n\nIn der mittleren phase wird mit konstanter Geschwindigkeit $v_\\max$ die folgende Strecke zurückgelegt:\n$$x_2 = v_\\max t_2 . $$\n\nIn Summe muss gelten:\n$$ s = x_1+x_2+x_3 = \\left(\\frac{1}{2 a_1} +\\frac{1}{2 |a_3|}\\right) v_\\max^2 + v_\\max t_2 .$$\n\nUmstellen nach $t_2$ ergibt:\n$$ t_2 = \\frac{s}{v_\\max} - \\left(\\frac{1}{2 a_1} + \\frac{1}{2 |a_3|}\\right) v_\\max . $$\n\nEs muss kurz kontrolliert werden, dass $t_2 \\geq 0$ gilt, ansonsten würde $v_\\max$ nie erreicht werden, weil die S-Bahn zu früh wieder abbremsen muss.\n\nDie Gesamtzeit ist:\n$$ t_1+t_2+t_3 = \\frac{v_\\max}{a_1} + \\frac{s}{v_\\max} - \\left(\\frac{1}{2 a_1} + \\frac{1}{2 |a_3|}\\right) v_\\max + \\frac{v_\\max}{|a_3|} = \\frac{s}{v_\\max} = 82 \\text{ s}$$","metadata":{"exercise":"solution"},"pos":35,"type":"cell"}
{"cell_type":"markdown","id":"30ea44","input":"%%solution      \n**Lösung**:    \n\nParameter aus der Aufgabenstellung: $a_1 = 0,\\!8 \\text{ m/s²}$ und $a_3 = -1,\\!2 \\text{ m/s²}$ und $s=1000 \\text{ m}$.\n\nKurze Überlegung: statt unbeschleunigt zu fahren, lohnt es sich zu beschleunigen und abzubremsen. Begründung: die Geschwindigkeit ist dadurch immer größer, und die Gesamtzeit also kleiner.\n\nEs ist also $t_2 = 0$.\n\nNach dem Anfahren ist die Geschwindigkeit $v(t_1) = a_1 \\cdot t_1$.\n\nDurch Abbremsen muss diese wieder auf $0$ gebracht werden, also ist\n$$ t_3 = \\frac{v(t_1)}{|a_3|} = \\frac{a_1}{|a_3|} t_1. $$\n\nDie Anfahrt beginnt bei Geschwindigkeit $0$ und legt eine Strecke zurück von\n$$ x_1 = \\frac{1}{2} a_1 t_1^2 . $$\n\nBeim Abbremsen endet die Geschwindigkeit bei $0$ und die gleiche Formel, allerdings mit $|a_3|$ kann verwendet werden:\n$$ x_3 = \\frac{1}{2} |a_3| t_3^2 = \\frac{a_1^2}{2 |a_3|} t_1^2 .$$\n\nZusammen muss sich die Strecke zwischen den Stationen ergeben:\n$$ s = x_1+x_3 = \\frac{1}{2} a_1 t_1^2 + \\frac{a_1^2}{2 |a_3|} t_1^2 = \\frac{a_1 |a_3| + a_1^2}{2 |a_3|} t_1^2 . $$\n$$\\Rightarrow t_1 = \\sqrt{\\frac{2 s |a_3|}{a_1 |a_3| + a_1^2}}$$\n\nDie Gesamtdauer ist entsprechend\n$$ t_1 + t_3 = t_1 + \\frac{a_1}{|a_3|} t_1 = \\frac{|a_3|+a_1}{|a_3|} \\sqrt{\\frac{2 s |a_3|}{a_1 |a_3| + a_1^2}} $$\n$$ = \\sqrt{\\frac{2 s |a_3|}{a_1 (|a_3|+a_1)} \\cdot \\frac{(|a_3|+a_1)^2}{|a_3|^2} } = \\sqrt{\\frac{2 s (|a_3|+a_1) }{a_1 |a_3|}} = 65 \\text{ s}. $$","metadata":{"exercise":"solution"},"pos":41,"type":"cell"}
{"cell_type":"markdown","id":"3d8420","input":"<div class=\"alert alert-block alert-info\">\n<i class=\"fas fa-lightbulb\"></i> <b>Code Tipps:</b> Plots\n<ul>\n<br>\n    <p>Wir benötigen 3 Schritte, um ein Diagramm zu erstellen (Wir können eine Analogie zur realen Welt herstellen): </p>\n<ol>\n<li>Module importieren (Papier, Stift und Lineal bereitlegen).</li>\n   \n```python\nimport matplotlib.pyplot as plt\n```\n\n<li>$x$-Punkte für die Abszissenachse und die zugehörigen $y$-Punkte für die Ordinatenachse definieren (Tabelle mit Daten anlegen).</li>\n    \n```python\nt = [0, 1, 2, 3, 4, 5]           # in s\ns = [0, 50, 100, 150, 200, 250]  # in m    \n```    \n\n<li>Plotten, d.h. Graph in ein Koordinatensystem zeichnen (Punkte auf kariertes Papier eintragen und mit einer Kurve verbinden)</li>\n    \n```python\nplt.plot(t,s)      \n```    \n</ol>\n\n</div>\n    \n <div class=\"alert alert-block alert-danger\">\n<b>Vorsicht!</b> \n<ul>\n    <p>  Die Listen für die $x$- und $y$-Werte <b>müssen die gleiche Dimension haben</b>, sonst erhalten Sie eine Fehlermeldung.\n </p>     \n</div>","pos":8,"type":"cell"}
{"cell_type":"markdown","id":"3ff2ba","input":"%%solution\nEine andere Möglichkeit wäre, die Fähre unter einem Winkel gegenüber der Senkrechten zur Strömungsrichtung fahren zu lassen, so dass die Ablegestelle genau gegenüber der Anlegestelle liegen könnte. Wie groß müsste dieser Winkel sein? Welche Geschwindigkeit muss die Fähre dann mindestens haben?","pos":55,"type":"cell"}
{"cell_type":"markdown","id":"4f7205","input":"%%solution      \n**solution**:\n- Die Fähre braucht für 300 m:\n\n$$t = \\frac{s_R}{v_F} = \\frac{300~\\mathrm{m}}{10~\\mathrm{\\frac{m}{s}}} = 30~\\mathrm{s}$$\n\n- Dabei driftet die Fähre ab:\n\n$$s_D = 7~\\mathrm{\\frac{m}{s}} \\cdot 30\\mathrm{s}  = 210~\\mathrm{m}$$","metadata":{"exercise":"solution"},"pos":51,"type":"cell"}
{"cell_type":"markdown","id":"521866","input":"**f)** Gegeben seien $h = 370 \\text{ cm}$ und $g = 9,81 \\text{ m/s²}$. Berechnen Sie, wie viel Zeit der Ball benötigt, bis er auf dem Boden aufschlägt sowie die Aufprallgeschwindigkeit.   ","pos":27,"type":"cell"}
{"cell_type":"markdown","id":"82bf84","input":"%%solution    \n**Lösung**:    \n\n$$t = \\sqrt{\\frac{2\\cdot h}{g}} = \\sqrt{\\frac{2\\cdot 3,70 \\text{ m}}{9,81 \\text{ m/s²}}} =  0,87 \\text{ s}$$ \n\n$$v = \\frac{1}{2}g\\cdot t = \\frac{1}{2} 9,81\\text{ m/s²} \\cdot 0,87 \\text{ s} = 4,26 \\text{ m/s}$$ ","metadata":{"exercise":"solution"},"pos":28,"type":"cell"}
{"cell_type":"markdown","id":"8671a5","input":"**b)** Nachdem Sie den Ball angeklickt haben, können Sie Ihre Listen von Zeit `t` und Ort `s` laden, indem Sie den folgenden Code ausführen:.","pos":12,"type":"cell"}
{"cell_type":"markdown","id":"8ef704","input":"---\n## Aufgabe 2","pos":31,"type":"cell"}
{"cell_type":"markdown","id":"9d6220","input":"**a)** Bestimmen Sie die kürzest mögliche Fahrtdauer bei einer gegebenen Höchstgeschwindigkeit $v_\\max=15~\\text{m/s}$. Die S-Bahn muss in der Zielstation zum Stehen kommen. Überprüfen Sie Ihr Ergebnis mit der interaktiven Grafik.","pos":34,"type":"cell"}
{"cell_type":"markdown","id":"9fce7b","input":"**d)** Tragen Sie die gemessenen Werte von $v$ als Datenpunkte in Abhängingkeit von $t$ auf. *Hinweis*: $v = \\frac{s_2- s_1}{t_2 - t_1}$ ist die Geschwindigkeit zur Zeit $\\frac{t_1+t_2}{2}$. Zeichnen Sie die theoretische Erwartung $v(t) = g t$ mit ein.","pos":19,"type":"cell"}
{"cell_type":"markdown","id":"a26b78","input":"**c)** Leiten Sie auf dem Papier eine Formel für $\\alpha_F$ her.","pos":58,"type":"cell"}
{"cell_type":"markdown","id":"a4d6c6","input":"Um die Aufgabestellung besser zu verstehen, können Sie den folgenden Code ausführen und mit dem Plot spielen.","pos":56,"type":"cell"}
{"cell_type":"markdown","id":"b1e325","input":"**d)** Berechnen Sie das numerische Ergebnis in der folgenden Code-Zelle. ","pos":60,"type":"cell"}
{"cell_type":"markdown","id":"b807df","input":"%%solution\n- Für die geradlinige Überfahrt ergibt sich als Winkel zur Senkrechten:\n\n$$\\sin\\alpha_F = \\frac{v_R}{v_F} \\Rightarrow  \\alpha_F = \\arcsin(7/10) = 44,4° $$ $v_F$ muss größer als $v_R$ Im Grenzfall $v_F = v_R$ wäre $\\alpha_F = 90°$ und die Fähre käme nie an.","metadata":{"exercise":"solution"},"pos":59,"type":"cell"}
{"cell_type":"markdown","id":"b85de4","input":"<div>\n    <img src=\"static/FHAachen-logo2.svg\" style=\"float: right;height: 15em;\">\n</div>\n\n<div>\n    <img src=\"static/IIIPIB_RWTH.png\" style=\"float: right;height: 6.5em;\">\n</div>\n\n<p style=\"font-size:12pt\";> <b> Einführung in die Physik -  Sommersemester 2021</b> <br>\n<b> Prof. Dr. Mottaghy, Prof. Dr.  Roth </b><br>\n<b> Fachbereich Energietechnik/  Lehrstuhl für Experimentalphysik III B  </b>\n</p>\n    \n## Übung 3: Kinematik\n\n\n----\n\n#### Übersicht der Aufgaben\n1. [Freier Fall](#1)\n2. [Gleichmäßig beschleunigte S-Bahn](#2)\n3. [Gleichförmig bewegte Fähre](#3)\n---\n\n\n","pos":2,"type":"cell"}
{"cell_type":"markdown","id":"bb112d","input":"___","pos":46,"type":"cell"}
{"cell_type":"markdown","id":"c23c7c","input":"**e)** Tragen Sie nun die gemessenen Werte $s$ und die Funktion $s(t)$ gegen $t^{2}$ auf. Was ergibt sich?","pos":24,"type":"cell"}
{"cell_type":"markdown","id":"c2f2bd","input":"**b)** Bestimmen Sie die kürzest mögliche Fahrtdauer ohne Geschwindigkeitsbegrenzung. Überprüfen Sie Ihr Ergebnis mit der interaktiven Grafik.","pos":40,"type":"cell"}
{"cell_type":"markdown","id":"c88fdd","input":"___\n## Aufgabe 1","pos":7,"type":"cell"}
{"cell_type":"markdown","id":"cadaba","input":"**c)** Tragen Sie die gemessenen Werte von $s$ als Datenpunkte in Abhängingkeit von $t$ auf. Zeichnen Sie die theoretische Erwartung $s(t) = \\frac{1}{2} g t^2$ mit ein.","pos":15,"type":"cell"}
{"cell_type":"markdown","id":"cc47b0","input":"Um die Aufgabestellung besser zu verstehen, können Sie den folgenden Code ausführen und mit dem Plot spielen.","pos":48,"type":"cell"}
{"cell_type":"markdown","id":"d79864","input":"<div class=\"alert alert-block alert-info\">\n<i class=\"fas fa-lightbulb\"></i> <b>Code Tipps:</b> \n<ul>\n    <b>Liste</b> I:\n    <p>Eine Liste (Datentyp <code>list</code>) in Python besteht aus mehreren Werten in einer geordneten Reihenfolge mit eckigen Klammern:</p>\n    <p> <code>liste = [12, 3, 6, 7]</code></p>\n    <b>Numpy-Array</b>:\n    <p>Im Gegensatz zu Listen unterstützen Arrays elemtweise arithmetische Operationen (<code>+,-,*,/,**</code>). Um eine Liste in ein Numpy-Array umzuwandeln schreibe:</p>\n    <p> <code> liste = np.array([12, 3, 6, 7]) </code></p>\n    <p>Letztendlich wollen wir nur mit numpy-arrays arbeiten. </p>\n</div>","pos":4,"type":"cell"}
{"cell_type":"markdown","id":"d92a69","input":"**a)** Die Zeit und der Ort werden in einer Liste speichern, wenn Sie auf dem Ball klicken. Wenn das Video zu schnell läuft, können Sie die Schaltflächen Pause und Neustart verwenden, um Ihre Liste zu erstellen. <code>SHIFT⇪</code> + <code>ENTER ↵ </code> zum Ausführen des unten stehenden Codes.","pos":10,"type":"cell"}
{"cell_type":"markdown","id":"e05e1e","input":"<div style= \"color: black;background-color: rgba(0,177,172, 0.1) ;margin: 10 px auto; padding: 10px; border-radius: 10px\">\n<p style=\"font-size:12pt; text-align:center; color:   black;background-color: rgba(0,177,172, 0.1) ;margin: 10 px auto; padding: 10px; border-radius: 10px\" id=\"1\"><b>  Aufgabe 1 </b>  </p> \n\nEin Ball fällt von einer Höhe von $370 \\text{ cm}$ im freien Fall hinunter. Mit Hilfe des unteren Videos können Sie die Zeit und ihre $y$-Koordinate (siehe rechte untere Ecke) im freien Fall ablesen. Wenn das Video zu schnell läuft, können Sie die Schaltflächen Pause und Neustart verwenden, um Ihre Liste zu erstellen.","pos":9,"type":"cell"}
{"cell_type":"markdown","id":"e41745","input":"<div style= \"color: black;background-color: rgba(0,177,172, 0.1) ;margin: 10 px auto; padding: 10px; border-radius: 10px\">\n<p style=\"font-size:12pt; text-align:center; color:   black;background-color: rgba(0,177,172, 0.1) ;margin: 10 px auto; padding: 10px; border-radius: 10px\" id=\"2\"><b>  Aufgabe 2 </b>  </p> \n\nDie Fahrt einer S-Bahn zwischen zwei Stationen in $1,\\!0~\\text{km}$ Abstand besteht aus drei Phasen. Beim Anfahren wird die S-Bahn mit $0,\\!80~\\text{m/s²}$ beschleunigt, anschließend wird die Geschwindigkeit konstant gehalten, und beim Anhalten wird die S-Bahn mit $-1,\\!2~\\text{m/s²}$ gebremst.\n\nDie nachfolgende interaktive Grafik gibt den zeitlichen Verlauf der Position $x$, Geschwindigkeit $v$ und Beschleunigung $a$ der S-Bahn wieder. Dabei bezeichnet $t_1$ wie lang das Anfahren, $t_2$ wie lang die unbeschleunigte Fahrt, und $t_3$ wie lang das Abbremsen jeweils in Sekunden dauern.","pos":32,"type":"cell"}
{"cell_type":"markdown","id":"f4d369","input":"<div style=\" border: 2px solid black;margin: 10px auto; padding: 10px; border-radius: 10px;\">\n    <h5>\n        Kinematik\n    </h5>\n\n\n\nKinematik bedeutet \"Bewegungslehre“, wobei nicht nach den\nUrsachen gefragt wird. Ebenfalls wird die räumlich Ausdehnung\nvernachlässigt und das **Modell des Massenpunktes** verwendet.\nZur Kinematik gehört auch die Kreisbewegung, aber zunächst\nbetrachten wir reine **Translationen**.\n\nFür die Beschreibung der **eindimensionale Bewegung** benötigen wir\ndrei Parameter:\n- den **Ort** $s(t)$ mit der Einheit m\n- die **Geschwindigkeit** $v(t)$ mit der Einheit m s⁻¹\n- und die **Beschleunigung** $a(t)$ mit der Einheit m s⁻²\n\n**Ort:**\n\nUm den Ort $s$ eines Objekts festzulegen, muss der Nullpunkt im Koordinatensystem definiert werden. Des Weiteren müssen unterschieden werden:\n- die zurücklegte Strecke des Objekts, welche vom Weg abhängt.\n- die Verschiebung, welche nur vom Anfangs- und Endpunkt abhängt.\n\n**Geschwindigkeit:**\n\nPrinzipiell ist die vollständige Information über die Bewegung eines Objekts im zeitabhängigen Ort $s(t)$ enthalten. Es ist jedoch oft sinnvoll von einer Geschwindigkeit $v$ eines Objekts zu sprechen, welche als das Verhältnis von zurückgelegter Strecke ∆s zur verstrichenen Zeit definiert ist.\n\n**Beschleunigung:**\n\nDie Beschleunigung a eines Objekts ist als die Änderung der Geschwindigkeit $\\Delta v$ pro Zeitintervall definiert.\n\n\n\n**Gleichförmige Bewegung**: Der einfachste Fall ist die eindimensionale gleichförmige Bewegung. Dabei ist die Geschwindigkeit konstant. Wir betrachten nun das zugehörige Weg-Zeit-, das Geschwindigkeits-Zeit-, sowie das Beschleunigungs-Zeit-Diagramm:\n\n<img src=\"static/gleb.jpg\" align=\"center\"/>\n\n\n**Ungleichförmige Bewegung**: Im obigen Fall haben wir die Durchschnittsgeschwindigkeit in einem Intervall definiert. Falls $v$ konstant ist, so reicht dies. Bei einer ungleichförmigen Bewegung müssen wir überlegen, wie sich die Momentangeschwindigkeit, also die Geschwindigkeit genau zu einem Zeitpunkt definieren lässt.\n\n\n**Gleichmäßig beschleunigte Bewegung**: Ein **Spezialfall ungleichförmiger Bewegung** ist die **gleichmäßig beschleunigte Bewegung**, anhand derer wir uns den Zusammenhang zwischen Ort, Geschwindigkeit und Beschleunigung mit der Zeit ansehen.\n\n<img src=\"static/ungleb.jpg\" align=\"center\"/>\n\n<br>\n    \n<img src= \"static/intdiff.png\"  height=\"200\" width=\"300\"/>\n\n|Parameter | Gleichförmige Bewegung|Gleichmäßig beschleunigte Bewegung|Ungleichförmige Bewegung|\n|:------|:------|:------|:------|\n|Ort  | $$s=v_0t+s_0$$ | $$s(t)=\\frac{1}{2}a_0t^2+v_0t+s_0$$ | $$s(t)$$     | \n|Geschwindigkeit  |  $$v =\\frac{\\Delta s}{\\Delta t}$$ |$$v(t) = \\frac{\\text{d}s}{\\text{d}t}=a_0t + v_0$$ |$$v(t) = \\frac{\\text{d}s}{\\text{d}t}=\\dot{s}$$|\n|Beschleunigung   | $$a =0$$|$$a(t) =\\frac{\\text{d}v}{\\text{d}t}= a_0$$|$$a(t) = \\frac{\\text{d}v}{\\text{d}t}= \\frac{\\text{d}\\dot{s}}{\\text{d}t}=\\ddot{s}$$     | \n    \n</div>","pos":3,"type":"cell"}
{"id":0,"time":1633786775399,"type":"user"}
{"last_load":1633786772652,"type":"file"}